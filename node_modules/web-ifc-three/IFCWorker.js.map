{"version":3,"file":"IFCWorker.js","sources":["../src/IFC/web-workers/serializer/Vector.ts","../src/IFC/web-workers/serializer/IfcGeometry.ts","../src/IFC/web-workers/serializer/FlatMesh.ts","../src/IFC/web-workers/serializer/FlatMeshVector.ts","../src/IFC/web-workers/serializer/Serializer.ts","../src/IFC/web-workers/BaseDefinitions.ts","../../node_modules/web-ifc/web-ifc-api.js","../src/IFC/web-workers/workers/WebIfcWorker.ts","../src/IFC/BaseDefinitions.ts","../src/IFC/components/properties/BasePropertyManager.ts","../src/IFC/components/IFCElementsMap.ts","../src/IFC/components/properties/WebIfcPropertyManager.ts","../src/IFC/components/IfcTypesMap.ts","../src/IFC/components/properties/JSONPropertyManager.ts","../src/IFC/components/properties/PropertyManager.ts","../src/IFC/web-workers/workers/PropertyWorker.ts","../src/IFC/web-workers/workers/StateWorker.ts","../src/IFC/web-workers/IFCWorker.ts"],"sourcesContent":["import { SerializedVector } from '../BaseDefinitions';\r\nimport { Vector as WebIfcVector } from 'web-ifc';\r\n\r\nexport class Vector<T> implements WebIfcVector<T> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: T } = {};\r\n\r\n    constructor(vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach((key) => this._data[key] = vector[key]);\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { SerializedIfcGeometry } from '../BaseDefinitions';\r\nimport { IfcGeometry as WebIfcIfcGeometry } from 'web-ifc';\r\n\r\nexport class IfcGeometry implements WebIfcIfcGeometry {\r\n    private readonly _GetVertexData: number;\r\n    private readonly _GetVertexDataSize: number;\r\n    private readonly _GetIndexData: number;\r\n    private readonly _GetIndexDataSize: number;\r\n\r\n    constructor(vector: SerializedIfcGeometry) {\r\n        this._GetVertexData = vector.GetVertexData;\r\n        this._GetVertexDataSize = vector.GetVertexDataSize;\r\n        this._GetIndexData = vector.GetIndexData;\r\n        this._GetIndexDataSize = vector.GetIndexDataSize;\r\n    }\r\n\r\n    GetVertexData() {\r\n        return this._GetVertexData;\r\n    }\r\n\r\n    GetVertexDataSize() {\r\n        return this._GetVertexDataSize;\r\n    }\r\n\r\n    GetIndexData() {\r\n        return this._GetIndexData;\r\n    }\r\n\r\n    GetIndexDataSize() {\r\n        return this._GetIndexDataSize;\r\n    }\r\n}","import { SerializedFlatMesh } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, PlacedGeometry } from 'web-ifc';\r\nimport { Vector } from './Vector';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMesh implements WebIfcFlatMesh {\r\n    geometries: Vector<PlacedGeometry>;\r\n    expressID: number;\r\n\r\n    constructor(serializer: Serializer, flatMesh: SerializedFlatMesh) {\r\n        this.expressID = flatMesh.expressID;\r\n        this.geometries = serializer.reconstructVector(flatMesh.geometries);\r\n    }\r\n}","import { SerializedVector } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, Vector as WebIfcVector } from 'web-ifc';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMeshVector implements WebIfcVector<WebIfcFlatMesh> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: WebIfcFlatMesh } = {};\r\n\r\n    constructor(serializer: Serializer, vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach(key => this._data[key] = serializer.reconstructFlatMesh(vector[key]));\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { Vector as WebIfcVector, IfcGeometry as WebIfcIfcGeometry, FlatMesh as WebIfcFlatMesh } from 'web-ifc';\r\nimport { SerializedFlatMesh, SerializedIfcGeometry, SerializedVector } from '../BaseDefinitions';\r\nimport { Vector } from './Vector';\r\nimport { IfcGeometry } from './IfcGeometry';\r\nimport { FlatMesh } from './FlatMesh';\r\nimport { FlatMeshVector } from './FlatMeshVector';\r\n\r\nexport class Serializer {\r\n    serializeVector<T>(vector: WebIfcVector<T>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            serialized[i] = vector.get(i);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructVector(vector: SerializedVector): Vector<any> {\r\n        return new Vector(vector);\r\n    }\r\n\r\n    serializeIfcGeometry(geometry: WebIfcIfcGeometry) {\r\n        const GetVertexData = geometry.GetVertexData();\r\n        const GetVertexDataSize = geometry.GetVertexDataSize();\r\n        const GetIndexData = geometry.GetIndexData();\r\n        const GetIndexDataSize = geometry.GetIndexDataSize();\r\n        return {\r\n            GetVertexData,\r\n            GetVertexDataSize,\r\n            GetIndexData,\r\n            GetIndexDataSize\r\n        } as SerializedIfcGeometry;\r\n    }\r\n\r\n    reconstructIfcGeometry(geometry: SerializedIfcGeometry) {\r\n        return new IfcGeometry(geometry);\r\n    }\r\n\r\n    serializeFlatMesh(flatMesh: WebIfcFlatMesh) {\r\n        return {\r\n            expressID: flatMesh.expressID,\r\n            geometries: this.serializeVector(flatMesh.geometries)\r\n        } as SerializedFlatMesh;\r\n    }\r\n\r\n    reconstructFlatMesh(flatMesh: SerializedFlatMesh) {\r\n        return new FlatMesh(this, flatMesh);\r\n    }\r\n\r\n    serializeFlatMeshVector(vector: WebIfcVector<WebIfcFlatMesh>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            const flatMesh = vector.get(i);\r\n            serialized[i] = this.serializeFlatMesh(flatMesh);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructFlatMeshVector(vector: SerializedVector): WebIfcVector<WebIfcFlatMesh> {\r\n        return new FlatMeshVector(this, vector);\r\n    }\r\n}","import { IfcState, WebIfcAPI } from '../BaseDefinitions';\r\n\r\nexport interface IfcWorkerAPI {\r\n    post: (data: any) => void;\r\n    initializeAPI: (api: WebIfcAPI) => void;\r\n    state?: IfcState;\r\n    postCallback: (data: any, result: any, serializer?: any) => void;\r\n}\r\n\r\nexport enum WorkerActions {\r\n    // Worker State Actions\r\n    updateStateUseJson = 'updateStateUseJson',\r\n    updateModelStateTypes = 'updateModelStateTypes',\r\n    updateModelStateJsonData = 'updateModelStateJsonData',\r\n    loadJsonDataFromWorker = 'loadJsonDataFromWorker',\r\n\r\n    // WebIFC Actions\r\n    Close = 'Close',\r\n    Init = 'Init',\r\n    OpenModel = 'OpenModel',\r\n    CreateModel = 'CreateModel',\r\n    ExportFileAsIFC = 'ExportFileAsIFC',\r\n    GetGeometry = 'GetGeometry',\r\n    GetLine = 'GetLine',\r\n    GetAndClearErrors = 'GetAndClearErrors',\r\n    WriteLine = 'WriteLine',\r\n    FlattenLine = 'FlattenLine',\r\n    GetRawLineData = 'GetRawLineData',\r\n    WriteRawLineData = 'WriteRawLineData',\r\n    GetLineIDsWithType = 'GetLineIDsWithType',\r\n    GetAllLines = 'GetAllLines',\r\n    SetGeometryTransformation = 'SetGeometryTransformation',\r\n    GetCoordinationMatrix = 'GetCoordinationMatrix',\r\n    GetVertexArray = 'GetVertexArray',\r\n    GetIndexArray = 'GetIndexArray',\r\n    getSubArray = 'getSubArray',\r\n    CloseModel = 'CloseModel',\r\n    StreamAllMeshes = 'StreamAllMeshes',\r\n    StreamAllMeshesWithTypes = 'StreamAllMeshesWithTypes',\r\n    IsModelOpen = 'IsModelOpen',\r\n    LoadAllGeometry = 'LoadAllGeometry',\r\n    GetFlatMesh = 'GetFlatMesh',\r\n    SetWasmPath = 'SetWasmPath',\r\n\r\n    // Properties\r\n    getExpressId = 'getExpressId',\r\n    initializeProperties = 'initializeProperties',\r\n    getAllItemsOfType = 'getAllItemsOfType',\r\n    getItemProperties = 'getItemProperties',\r\n    getMaterialsProperties = 'getMaterialsProperties',\r\n    getPropertySets = 'getPropertySets',\r\n    getSpatialStructure = 'getSpatialStructure',\r\n    getTypeProperties = 'getTypeProperties'\r\n}\r\n\r\nexport enum WorkerAPIs {\r\n    workerState = 'workerState',\r\n    webIfc = 'webIfc',\r\n    properties = 'properties'\r\n}\r\n\r\nexport interface IfcEventData {\r\n    worker: WorkerAPIs;\r\n    action: WorkerActions;\r\n    args: any;\r\n    id: number;\r\n    result: any;\r\n}\r\n\r\nexport interface RootWorker {\r\n    [WorkerAPIs.workerState]: WorkerStateAPI;\r\n    [WorkerAPIs.webIfc]: WebIfcWorkerAPI;\r\n    [WorkerAPIs.properties]: PropertyWorkerAPI;\r\n}\r\n\r\nexport interface BaseWorkerAPI {\r\n    API: WorkerAPIs;\r\n}\r\n\r\nexport type IfcWorkerEventHandler = (data: IfcEventData) => void;\r\n\r\nexport interface WorkerStateAPI extends BaseWorkerAPI {\r\n    [WorkerActions.updateStateUseJson]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateJsonData]: IfcWorkerEventHandler;\r\n    [WorkerActions.loadJsonDataFromWorker]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface PropertyWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.getAllItemsOfType]: IfcWorkerEventHandler;\r\n    [WorkerActions.getItemProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getMaterialsProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getPropertySets]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSpatialStructure]: IfcWorkerEventHandler;\r\n    [WorkerActions.getTypeProperties]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface WebIfcWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.Init]: IfcWorkerEventHandler;\r\n    [WorkerActions.Close]: IfcWorkerEventHandler;\r\n    [WorkerActions.OpenModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.CreateModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.ExportFileAsIFC]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAndClearErrors]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.FlattenLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLineIDsWithType]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAllLines]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetGeometryTransformation]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetCoordinationMatrix]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetVertexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetIndexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSubArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.CloseModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshes]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshesWithTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.IsModelOpen]: IfcWorkerEventHandler;\r\n    [WorkerActions.LoadAllGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetFlatMesh]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetWasmPath]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface SerializedVector {\r\n    [key: number]: any;\r\n\r\n    size: number;\r\n}\r\n\r\nexport interface SerializedIfcGeometry {\r\n    GetVertexData: number;\r\n    GetVertexDataSize: number;\r\n    GetIndexData: number;\r\n    GetIndexDataSize: number;\r\n}\r\n\r\nexport interface SerializedFlatMesh {\r\n    geometries: SerializedVector;\r\n    expressID: number;\r\n}\r\n\r\nexport const ErrorRootStateNotAvailable = 'The root worker does not have any state';\r\nexport const ErrorPropertiesNotAvailable = 'Error: Properties not available from web worker';\r\nexport const ErrorBadJsonPath = 'Error: Model not available from web worker';\r\nexport const ErrorBadJson = 'Error: The given Json could not be read as a JS object';","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (Module[\"wasmMemory\"]) {\n          wasmMemory = Module[\"wasmMemory\"];\n        } else {\n          wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536 });\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"Z\"];\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            HEAP8[ptr + size++ >>> 0] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                HEAP16[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? HEAP8 : HEAPU8;\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? HEAP16 : HEAPU16;\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? HEAP32 : HEAPU32;\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_get_heap_size() {\n          return HEAPU8.length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        __ATINIT__.push({ func: function() {\n          ___wasm_call_ctors();\n        } });\n        var asmLibraryArg = { \"y\": ___assert_fail, \"B\": ___sys_fcntl64, \"Q\": ___sys_ioctl, \"R\": ___sys_open, \"W\": __embind_finalize_value_array, \"r\": __embind_finalize_value_object, \"T\": __embind_register_bool, \"u\": __embind_register_class, \"t\": __embind_register_class_constructor, \"d\": __embind_register_class_function, \"S\": __embind_register_emval, \"V\": __embind_register_enum, \"w\": __embind_register_enum_value, \"D\": __embind_register_float, \"h\": __embind_register_function, \"n\": __embind_register_integer, \"l\": __embind_register_memory_view, \"E\": __embind_register_std_string, \"x\": __embind_register_std_wstring, \"X\": __embind_register_value_array, \"i\": __embind_register_value_array_element, \"s\": __embind_register_value_object, \"f\": __embind_register_value_object_field, \"U\": __embind_register_void, \"p\": __emval_as, \"Y\": __emval_call, \"b\": __emval_decref, \"G\": __emval_get_global, \"m\": __emval_get_property, \"k\": __emval_incref, \"P\": __emval_instanceof, \"F\": __emval_is_number, \"z\": __emval_new_array, \"g\": __emval_new_cstring, \"v\": __emval_new_object, \"o\": __emval_run_destructors, \"j\": __emval_set_property, \"e\": __emval_take_value, \"c\": _abort, \"N\": _clock_gettime, \"J\": _emscripten_memcpy_big, \"q\": _emscripten_resize_heap, \"L\": _environ_get, \"M\": _environ_sizes_get, \"C\": _fd_close, \"O\": _fd_read, \"H\": _fd_seek, \"A\": _fd_write, \"a\": wasmMemory, \"I\": _setTempRet0, \"K\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"_\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"$\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        noExitRuntime = true;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  4097777520,\n  4288193352,\n  1634111441,\n  177149247,\n  2056796094,\n  3087945054,\n  277319702,\n  753842376,\n  2906023776,\n  32344328,\n  2979338954,\n  1095909175,\n  2938176219,\n  635142910,\n  3758799889,\n  1051757585,\n  4217484030,\n  3902619387,\n  3296154744,\n  1677625105,\n  639361253,\n  843113511,\n  905975707,\n  3221913625,\n  3571504051,\n  2272882330,\n  25142252,\n  4136498852,\n  3640358203,\n  1973544240,\n  3495092785,\n  4074379575,\n  1335981549,\n  1052013943,\n  1062813311,\n  1945004755,\n  3040386961,\n  395920057,\n  3242481149,\n  342316401,\n  3518393246,\n  1360408905,\n  1904799276,\n  862014818,\n  3310460725,\n  264262732,\n  402227799,\n  1003880860,\n  4123344466,\n  1658829314,\n  2814081492,\n  3747195512,\n  484807127,\n  3415622556,\n  647756555,\n  819412036,\n  1426591983,\n  2058353004,\n  4278956645,\n  182646315,\n  2188021234,\n  3132237377,\n  987401354,\n  707683696,\n  2223149337,\n  3508470533,\n  900683007,\n  263784265,\n  1509553395,\n  3493046030,\n  3319311131,\n  2068733104,\n  4175244083,\n  2176052936,\n  76236018,\n  629592764,\n  377706215,\n  1437502449,\n  1073191201,\n  1911478936,\n  2474470126,\n  3588315303,\n  3079942009,\n  3694346114,\n  1687234759,\n  310824031,\n  3612865200,\n  3171933400,\n  1156407060,\n  3651124850,\n  738039164,\n  2295281155,\n  90941305,\n  2262370178,\n  3024970846,\n  3283111854,\n  979691226,\n  2320036040,\n  2016517767,\n  3053780830,\n  4086658281,\n  1329646415,\n  1529196076,\n  3127900445,\n  3027962421,\n  3420628829,\n  1999602285,\n  1404847402,\n  331165859,\n  4252922144,\n  3101698114,\n  1162798199,\n  413509423,\n  812556717,\n  3824725483,\n  2347447852,\n  3825984169,\n  1620046519,\n  3026737570,\n  630975310,\n  4292641817,\n  4207607924,\n  2391383451,\n  2769231204,\n  926996030,\n  2391406946,\n  4156078855,\n  3512223829,\n  4237592921,\n  3304561284,\n  486154966\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm = require_web_ifc();\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n    this.wasmPath = \"\";\n  }\n  Init() {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        let locateFileHandler = (path, prefix) => {\n          if (path.endsWith(\".wasm\"))\n            return prefix + this.wasmPath + path;\n          return prefix + path;\n        };\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true, locateFile: locateFileHandler });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    this.wasmModule[\"FS_createDataFile\"](\"/\", \"filename\", data, true, true, true);\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.OpenModel(s);\n    this.wasmModule[\"FS_unlink\"](\"/filename\");\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  GetAndClearErrors(modelID) {\n    return this.wasmModule.GetAndClearErrors(modelID);\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetCoordinationMatrix(modelID) {\n    return this.wasmModule.GetCoordinationMatrix(modelID);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  StreamAllMeshesWithTypes(modelID, types, meshCallback) {\n    this.wasmModule.StreamAllMeshesWithTypes(modelID, types, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  SetWasmPath(path) {\n    this.wasmPath = path;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n","import { IfcEventData, IfcWorkerAPI, WebIfcWorkerAPI, WorkerAPIs } from '../BaseDefinitions';\r\nimport { IfcAPI } from 'web-ifc';\r\nimport { Serializer } from '../serializer/Serializer';\r\n\r\nexport class WebIfcWorker implements WebIfcWorkerAPI {\r\n\r\n    webIFC: IfcAPI;\r\n    API = WorkerAPIs.webIfc;\r\n\r\n    constructor(private worker: IfcWorkerAPI, private serializer: Serializer) {\r\n        this.webIFC = new IfcAPI();\r\n        this.worker.initializeAPI(this.webIFC);\r\n    }\r\n\r\n    async Init(data: IfcEventData) {\r\n        await this.webIFC.Init();\r\n        this.worker.post(data);\r\n    };\r\n\r\n    async Close(data: IfcEventData) {\r\n        this.nullifyWebIfc();\r\n        this.webIFC = new IfcAPI();\r\n        await this.webIFC.Init();\r\n        this.worker.post(data);\r\n    };\r\n\r\n    CloseModel(data: IfcEventData) {\r\n        this.webIFC.CloseModel(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    CreateModel(data: IfcEventData) {\r\n        data.result = this.webIFC.CreateModel(data.args.settings);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    ExportFileAsIFC(data: IfcEventData) {\r\n        data.result = this.webIFC.ExportFileAsIFC(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    FlattenLine(data: IfcEventData) {\r\n        this.webIFC.FlattenLine(data.args.modelID, data.args.line);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetAllLines(data: IfcEventData) {\r\n        const vector = this.webIFC.GetAllLines(data.args.modelID);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetAndClearErrors(data: IfcEventData) {\r\n        const vector = this.webIFC.GetAndClearErrors(data.args.modelID);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetCoordinationMatrix(data: IfcEventData) {\r\n        data.result = this.webIFC.GetCoordinationMatrix(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetFlatMesh(data: IfcEventData) {\r\n        const flatMesh = this.webIFC.GetFlatMesh(data.args.modelID, data.args.expressID);\r\n        data.result = this.serializer.serializeFlatMesh(flatMesh);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetGeometry(data: IfcEventData) {\r\n        const ifcGeometry = this.webIFC.GetGeometry(data.args.modelID, data.args.geometryExpressID);\r\n        data.result = this.serializer.serializeIfcGeometry(ifcGeometry);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetIndexArray(data: IfcEventData) {\r\n        data.result = this.webIFC.GetIndexArray(data.args.ptr, data.args.size);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetLine(data: IfcEventData) {\r\n        const args = data.args;\r\n        data.result = this.webIFC.GetLine(args.modelID, args.expressID, args.flatten);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetLineIDsWithType(data: IfcEventData) {\r\n        const vector = this.webIFC.GetLineIDsWithType(data.args.modelID, data.args.type);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetRawLineData(data: IfcEventData) {\r\n        data.result = this.webIFC.GetRawLineData(data.args.modelID, data.args.expressID);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    GetVertexArray(data: IfcEventData) {\r\n        data.result = this.webIFC.GetVertexArray(data.args.ptr, data.args.size);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    IsModelOpen(data: IfcEventData) {\r\n        data.result = this.webIFC.IsModelOpen(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    LoadAllGeometry(data: IfcEventData) {\r\n        const flatMeshVector = this.webIFC.LoadAllGeometry(data.args.modelID);\r\n        data.result = this.serializer.serializeFlatMeshVector(flatMeshVector);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    OpenModel(data: IfcEventData) {\r\n        data.result = this.webIFC.OpenModel(data.args.data, data.args.settings);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    SetGeometryTransformation(data: IfcEventData) {\r\n        this.webIFC.SetGeometryTransformation(data.args.modelID, data.args.transformationMatrix);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    SetWasmPath(data: IfcEventData) {\r\n        this.webIFC.SetWasmPath(data.args.path);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    StreamAllMeshes(data: IfcEventData) {\r\n        const serializer = this.serializer.serializeFlatMesh;\r\n        const callback = (result: any) => this.worker.postCallback(data, result, serializer);\r\n        this.webIFC.StreamAllMeshes(data.args.modelID, callback);\r\n    }\r\n\r\n    StreamAllMeshesWithTypes(data: IfcEventData) {\r\n        const args = data.args;\r\n        const serializer = this.serializer.serializeFlatMesh;\r\n        const callback = (result: any) => this.worker.postCallback(data, result, serializer);\r\n        this.webIFC.StreamAllMeshesWithTypes(args.modelID, args.types, callback);\r\n    }\r\n\r\n    WriteLine(data: IfcEventData) {\r\n        this.webIFC.WriteLine(data.args.modelID, data.args.lineObject);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    WriteRawLineData(data: IfcEventData) {\r\n        this.webIFC.WriteRawLineData(data.args.modelID, data.args.data);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    getSubArray(data: IfcEventData) {\r\n        const args = data.args;\r\n        this.webIFC.getSubArray(args.heap, args.startPtr, args.sizeBytes);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    private nullifyWebIfc() {\r\n        // @ts-ignore\r\n        this.webIFC = null;\r\n    }\r\n}","import { BufferAttribute, BufferGeometry, Material, Mesh, Object3D } from 'three';\r\n// TODO: Remove ts ignore comments when @types/three gets updated\r\n// @ts-ignore\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport {\r\n    FlatMesh,\r\n    IfcGeometry,\r\n    IFCRELAGGREGATES, IFCRELASSOCIATESMATERIAL,\r\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n    IFCRELDEFINESBYPROPERTIES,\r\n    IFCRELDEFINESBYTYPE, LoaderError, LoaderSettings, RawLineData, Vector\r\n} from 'web-ifc';\r\n\r\nexport const IdAttrName = 'expressID';\r\n\r\nexport type IdAttributeByMaterial = { [id: number]: number };\r\nexport type IdAttributesByMaterials = { [materialID: string]: IdAttributeByMaterial };\r\n\r\nexport const merge = (geoms: BufferGeometry[], createGroups = false) => {\r\n    // @ts-ignore\r\n    return mergeBufferGeometries(geoms, createGroups);\r\n};\r\n\r\nexport const newFloatAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Float32Array(data), size);\r\n};\r\n\r\nexport const newIntAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Uint32Array(data), size);\r\n};\r\n\r\n//TODO: Rename \"scene\" to \"parent\" in the next major release\r\nexport interface HighlightConfig {\r\n    scene: Object3D;\r\n    ids: number[];\r\n    removePrevious: boolean;\r\n    material?: Material;\r\n}\r\n\r\nexport interface HighlightConfigOfModel extends HighlightConfig {\r\n    modelID: number;\r\n}\r\n\r\nexport const DEFAULT = 'default';\r\n\r\nexport type SelectedItems = {\r\n    [matID: string]: { ids: Set<number>; mesh: Mesh };\r\n};\r\n\r\nexport type MapFaceindexID = { [key: number]: number };\r\n\r\nexport type IdGeometries = {\r\n    [expressID: number]: BufferGeometry;\r\n};\r\n\r\nexport type GeometriesByMaterial = {\r\n    material: Material;\r\n    geometries: IdGeometries;\r\n};\r\n\r\nexport interface GeometriesByMaterials {\r\n    [materialID: string]: GeometriesByMaterial;\r\n}\r\n\r\nexport interface TypesMap {\r\n    [key: number]: number;\r\n}\r\n\r\nexport interface IfcModel {\r\n    modelID: number;\r\n    mesh: IfcMesh;\r\n    items: GeometriesByMaterials;\r\n    types: TypesMap;\r\n    jsonData: { [id: number]: JSONObject };\r\n}\r\n\r\nexport interface JSONObject {\r\n    expressID: number;\r\n    type: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface Worker {\r\n    active: boolean;\r\n    path: string;\r\n}\r\n\r\nexport interface IfcState {\r\n    models: { [modelID: number]: IfcModel };\r\n    api: WebIfcAPI;\r\n    useJSON: boolean;\r\n    worker: Worker;\r\n    webIfcSettings?: LoaderSettings;\r\n}\r\n\r\nexport interface IfcMesh extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport interface Node {\r\n    expressID: number;\r\n    type: string;\r\n    children: Node[];\r\n}\r\n\r\nexport interface pName {\r\n    name: number;\r\n    relating: string;\r\n    related: string;\r\n    key: string;\r\n}\r\n\r\nexport const PropsNames = {\r\n    aggregates: {\r\n        name: IFCRELAGGREGATES,\r\n        relating: 'RelatingObject',\r\n        related: 'RelatedObjects',\r\n        key: 'children'\r\n    },\r\n    spatial: {\r\n        name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n        relating: 'RelatingStructure',\r\n        related: 'RelatedElements',\r\n        key: 'children'\r\n    },\r\n    psets: {\r\n        name: IFCRELDEFINESBYPROPERTIES,\r\n        relating: 'RelatingPropertyDefinition',\r\n        related: 'RelatedObjects',\r\n        key: 'hasPsets'\r\n    },\r\n    materials: {\r\n        name: IFCRELASSOCIATESMATERIAL,\r\n        relating: 'RelatingMaterial',\r\n        related: 'RelatedObjects',\r\n        key: 'hasMaterial'\r\n    },\r\n    type: {\r\n        name: IFCRELDEFINESBYTYPE,\r\n        relating: 'RelatingType',\r\n        related: 'RelatedObjects',\r\n        key: 'hasType'\r\n    }\r\n};\r\n\r\nexport interface WebIfcAPI {\r\n\r\n    wasmModule: any;\r\n\r\n    Init(): void | Promise<void>;\r\n\r\n    // To close the web worker\r\n    Close?: () => void;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @data Buffer containing IFC data (bytes)\r\n     * @data Settings settings for loading the model\r\n     */\r\n    OpenModel(data: string | Uint8Array, settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    /**\r\n     * Creates a new model and returns a modelID number\r\n     * @data Settings settings for generating data the model\r\n     */\r\n    CreateModel(settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    ExportFileAsIFC(modelID: number): Uint8Array | Promise<Uint8Array>;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     * @data Buffer containing IFC data (bytes)\r\n     */\r\n    GetGeometry(modelID: number, geometryExpressID: number): IfcGeometry | Promise<IfcGeometry>;\r\n\r\n    GetLine(modelID: number, expressID: number, flatten?: boolean):  any | Promise<any>;\r\n\r\n    GetAndClearErrors(modelID: number): Vector<LoaderError> | Promise<Vector<LoaderError>>;\r\n\r\n    WriteLine(modelID: number, lineObject: any): void | Promise<void>;\r\n\r\n    FlattenLine(modelID: number, line: any): void | Promise<void>;\r\n\r\n    GetRawLineData(modelID: number, expressID: number): RawLineData | Promise<RawLineData>;\r\n\r\n    WriteRawLineData(modelID: number, data: RawLineData):  any | Promise<any>;\r\n\r\n    GetLineIDsWithType(modelID: number, type: number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    GetAllLines(modelID: Number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    SetGeometryTransformation(modelID: number, transformationMatrix: Array<number>): void | Promise<void>;\r\n\r\n    GetCoordinationMatrix(modelID: number): Array<number> | Promise<Array<number>>;\r\n\r\n    GetVertexArray(ptr: number, size: number): Float32Array | Promise<Float32Array>;\r\n\r\n    GetIndexArray(ptr: number, size: number): Uint32Array | Promise<Uint32Array>;\r\n\r\n    getSubArray(heap: any, startPtr: any, sizeBytes: any): any | Promise<any>;\r\n\r\n    /**\r\n     * Closes a model and frees all related memory\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     */\r\n    CloseModel(modelID: number): void | Promise<void>;\r\n\r\n    StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    StreamAllMeshesWithTypes(modelID: number, types: Array<number>, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    /**\r\n     * Checks if a specific model ID is open or closed\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    IsModelOpen(modelID: number): boolean | Promise<boolean>;\r\n\r\n    /**\r\n     * Load all geometry in a model\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    LoadAllGeometry(modelID: number): Vector<FlatMesh> | Promise<Vector<FlatMesh>>;\r\n\r\n    /**\r\n     * Load geometry for a single element\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    GetFlatMesh(modelID: number, expressID: number): FlatMesh | Promise<FlatMesh>;\r\n\r\n    SetWasmPath(path: string): void | Promise<void>;\r\n}\r\n","import { IfcState, pName, PropsNames, Node } from '../../BaseDefinitions';\nimport { IfcElements } from '../IFCElementsMap';\n\nexport class BasePropertyManager {\n\n    constructor(protected state: IfcState) {\n    }\n\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.psets);\n    }\n\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.type);\n    }\n\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.materials);\n    }\n\n    protected getSpatialNode(modelID: number, node: Node, treeChunks: any, includeProperties?: boolean) {\n        this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\n        this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\n    }\n\n    protected getChildren(modelID: number, node: Node, treeChunks: any, propNames: pName, includeProperties?: boolean) {\n        const children = treeChunks[node.expressID];\n        if (children == undefined) return;\n        const prop = propNames.key as keyof Node;\n        (node[prop] as Node[]) = children.map((child: number) => {\n            let node = this.newNode(modelID, child);\n            if (includeProperties) {\n                const properties = this.getItemProperties(modelID, node.expressID) as any;\n                node = { ...node, ...properties };\n            }\n            this.getSpatialNode(modelID, node, treeChunks, includeProperties);\n            return node;\n        });\n    }\n\n    protected newNode(modelID: number, id: number) {\n        const typeName = this.getNodeType(modelID, id);\n        return {\n            expressID: id,\n            type: typeName,\n            children: []\n        };\n    }\n\n    protected async getSpatialTreeChunks(modelID: number) {\n        const treeChunks: any = {};\n        await this.getChunks(modelID, treeChunks, PropsNames.aggregates);\n        await this.getChunks(modelID, treeChunks, PropsNames.spatial);\n        return treeChunks;\n    }\n\n    protected saveChunk(chunks: any, propNames: pName, rel: any) {\n        const relating = rel[propNames.relating].value;\n        const related = rel[propNames.related].map((r: any) => r.value);\n        if (chunks[relating] == undefined) {\n            chunks[relating] = related;\n        } else {\n            chunks[relating] = chunks[relating].concat(related);\n        }\n    }\n\n    protected getRelated(rel: any, propNames: pName, IDs: number[]) {\n        const element = rel[propNames.relating];\n        if (!Array.isArray(element)) IDs.push(element.value);\n        else element.forEach((ele) => IDs.push(ele.value));\n    }\n\n    protected static isRelated(id: number, rel: any, propNames: pName) {\n        const relatedItems = rel[propNames.related];\n        if (Array.isArray(relatedItems)) {\n            const values = relatedItems.map((item) => item.value);\n            return values.includes(id);\n        }\n        return relatedItems.value === id;\n    }\n\n    protected static newIfcProject(id: number) {\n        return {\n            expressID: id,\n            type: 'IFCPROJECT',\n            children: []\n        };\n    }\n\n    async getProperty(modelID: number, elementID: number, recursive = false, propName: pName): Promise<any> {\n    }\n\n    protected async getChunks(modelID: number, chunks: any, propNames: pName): Promise<void> {\n    }\n\n    protected async getItemProperties(modelID: number, expressID: number, recursive = false): Promise<any> {\n    }\n\n    protected getNodeType(modelID: number, id: number): any {\n    }\n}","export const IfcElements: {[key: number]: string} = {\r\n  103090709: 'IFCPROJECT',\r\n  4097777520: 'IFCSITE',\r\n  4031249490: 'IFCBUILDING',\r\n  3124254112: 'IFCBUILDINGSTOREY',\r\n  3856911033: 'IFCSPACE',\r\n  1674181508: 'IFCANNOTATION',\r\n  25142252: 'IFCCONTROLLER',\r\n  32344328: 'IFCBOILER',\r\n  76236018: 'IFCLAMP',\r\n  90941305: 'IFCPUMP',\r\n  177149247: 'IFCAIRTERMINALBOX',\r\n  182646315: 'IFCFLOWINSTRUMENT',\r\n  263784265: 'IFCFURNISHINGELEMENT',\r\n  264262732: 'IFCELECTRICGENERATOR',\r\n  277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n  310824031: 'IFCPIPEFITTING',\r\n  331165859: 'IFCSTAIR',\r\n  342316401: 'IFCDUCTFITTING',\r\n  377706215: 'IFCMECHANICALFASTENER',\r\n  395920057: 'IFCDOOR',\r\n  402227799: 'IFCELECTRICMOTOR',\r\n  413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n  484807127: 'IFCEVAPORATOR',\r\n  486154966: 'IFCWINDOWSTANDARDCASE',\r\n  629592764: 'IFCLIGHTFIXTURE',\r\n  630975310: 'IFCUNITARYCONTROLELEMENT',\r\n  635142910: 'IFCCABLECARRIERFITTING',\r\n  639361253: 'IFCCOIL',\r\n  647756555: 'IFCFASTENER',\r\n  707683696: 'IFCFLOWSTORAGEDEVICE',\r\n  738039164: 'IFCPROTECTIVEDEVICE',\r\n  753842376: 'IFCBEAM',\r\n  812556717: 'IFCTANK',\r\n  819412036: 'IFCFILTER',\r\n  843113511: 'IFCCOLUMN',\r\n  862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n  900683007: 'IFCFOOTING',\r\n  905975707: 'IFCCOLUMNSTANDARDCASE',\r\n  926996030: 'IFCVOIDINGFEATURE',\r\n  979691226: 'IFCREINFORCINGBAR',\r\n  987401354: 'IFCFLOWSEGMENT',\r\n  1003880860: 'IFCELECTRICTIMECONTROL',\r\n  1051757585: 'IFCCABLEFITTING',\r\n  1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n  1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n  1073191201: 'IFCMEMBER',\r\n  1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n  1156407060: 'IFCPLATESTANDARDCASE',\r\n  1162798199: 'IFCSWITCHINGDEVICE',\r\n  1329646415: 'IFCSHADINGDEVICE',\r\n  1335981549: 'IFCDISCRETEACCESSORY',\r\n  1360408905: 'IFCDUCTSILENCER',\r\n  1404847402: 'IFCSTACKTERMINAL',\r\n  1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n  1437502449: 'IFCMEDICALDEVICE',\r\n  1509553395: 'IFCFURNITURE',\r\n  1529196076: 'IFCSLAB',\r\n  1620046519: 'IFCTRANSPORTELEMENT',\r\n  1634111441: 'IFCAIRTERMINAL',\r\n  1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n  1677625105: 'IFCCIVILELEMENT',\r\n  1687234759: 'IFCPILE',\r\n  1904799276: 'IFCELECTRICAPPLIANCE',\r\n  1911478936: 'IFCMEMBERSTANDARDCASE',\r\n  1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n  1973544240: 'IFCCOVERING',\r\n  1999602285: 'IFCSPACEHEATER',\r\n  2016517767: 'IFCROOF',\r\n  2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n  2058353004: 'IFCFLOWCONTROLLER',\r\n  2068733104: 'IFCHUMIDIFIER',\r\n  2176052936: 'IFCJUNCTIONBOX',\r\n  2188021234: 'IFCFLOWMETER',\r\n  2223149337: 'IFCFLOWTERMINAL',\r\n  2262370178: 'IFCRAILING',\r\n  2272882330: 'IFCCONDENSER',\r\n  2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n  2320036040: 'IFCREINFORCINGMESH',\r\n  2347447852: 'IFCTENDONANCHOR',\r\n  2391383451: 'IFCVIBRATIONISOLATOR',\r\n  2391406946: 'IFCWALL',\r\n  2474470126: 'IFCMOTORCONNECTION',\r\n  2769231204: 'IFCVIRTUALELEMENT',\r\n  2814081492: 'IFCENGINE',\r\n  2906023776: 'IFCBEAMSTANDARDCASE',\r\n  2938176219: 'IFCBURNER',\r\n  2979338954: 'IFCBUILDINGELEMENTPART',\r\n  3024970846: 'IFCRAMP',\r\n  3026737570: 'IFCTUBEBUNDLE',\r\n  3027962421: 'IFCSLABSTANDARDCASE',\r\n  3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n  3053780830: 'IFCSANITARYTERMINAL',\r\n  3079942009: 'IFCOPENINGSTANDARDCASE',\r\n  3087945054: 'IFCALARM',\r\n  3101698114: 'IFCSURFACEFEATURE',\r\n  3127900445: 'IFCSLABELEMENTEDCASE',\r\n  3132237377: 'IFCFLOWMOVINGDEVICE',\r\n  3171933400: 'IFCPLATE',\r\n  3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n  3242481149: 'IFCDOORSTANDARDCASE',\r\n  3283111854: 'IFCRAMPFLIGHT',\r\n  3296154744: 'IFCCHIMNEY',\r\n  3304561284: 'IFCWINDOW',\r\n  3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n  3319311131: 'IFCHEATEXCHANGER',\r\n  3415622556: 'IFCFAN',\r\n  3420628829: 'IFCSOLARDEVICE',\r\n  3493046030: 'IFCGEOGRAPHICELEMENT',\r\n  3495092785: 'IFCCURTAINWALL',\r\n  3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n  3512223829: 'IFCWALLSTANDARDCASE',\r\n  3518393246: 'IFCDUCTSEGMENT',\r\n  3571504051: 'IFCCOMPRESSOR',\r\n  3588315303: 'IFCOPENINGELEMENT',\r\n  3612865200: 'IFCPIPESEGMENT',\r\n  3640358203: 'IFCCOOLINGTOWER',\r\n  3651124850: 'IFCPROJECTIONELEMENT',\r\n  3694346114: 'IFCOUTLET',\r\n  3747195512: 'IFCEVAPORATIVECOOLER',\r\n  3758799889: 'IFCCABLECARRIERSEGMENT',\r\n  3824725483: 'IFCTENDON',\r\n  3825984169: 'IFCTRANSFORMER',\r\n  3902619387: 'IFCCHILLER',\r\n  4074379575: 'IFCDAMPER',\r\n  4086658281: 'IFCSENSOR',\r\n  4123344466: 'IFCELEMENTASSEMBLY',\r\n  4136498852: 'IFCCOOLEDBEAM',\r\n  4156078855: 'IFCWALLELEMENTEDCASE',\r\n  4175244083: 'IFCINTERCEPTOR',\r\n  4207607924: 'IFCVALVE',\r\n  4217484030: 'IFCCABLESEGMENT',\r\n  4237592921: 'IFCWASTETERMINAL',\r\n  4252922144: 'IFCSTAIRFLIGHT',\r\n  4278956645: 'IFCFLOWFITTING',\r\n  4288193352: 'IFCACTUATOR',\r\n  4292641817: 'IFCUNITARYEQUIPMENT',\r\n  3009204131: 'IFCGRID'\r\n};\r\n","import { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { pName } from '../../BaseDefinitions';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\nimport { IfcElements } from '../IFCElementsMap';\r\n\r\nexport class WebIfcPropertyManager extends BasePropertyManager  implements PropertyAPI {\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.state.api.GetLine(modelID, id, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const allLines = await this.state.api.GetLineIDsWithType(modelID, IFCPROJECT);\r\n        const projectID = allLines.get(0);\r\n        const project = WebIfcPropertyManager.newIfcProject(projectID);\r\n        this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return project;\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        let items: number[] = [];\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, type);\r\n        for (let i = 0; i < lines.size(); i++) items.push(lines.get(i));\r\n        if (!verbose) return items;\r\n        const result: any[] = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, items[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const propSetIds = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result: any[] = [];\r\n        for (let i = 0; i < propSetIds.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, propSetIds[i], recursive));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        for (let i = 0; i < relation.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, relation.get(i), false);\r\n            this.saveChunk(chunks, propNames, rel);\r\n        }\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        const IDs: number[] = [];\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, lines.get(i));\r\n            const isRelated = BasePropertyManager.isRelated(id, rel, propNames);\r\n            if (isRelated) this.getRelated(rel, propNames, IDs);\r\n        }\r\n        return IDs;\r\n    }\r\n}","export const IfcTypesMap:  {[key: number]: string} = {\r\n    3821786052: \"IFCACTIONREQUEST\",\r\n    2296667514: \"IFCACTOR\",\r\n    3630933823: \"IFCACTORROLE\",\r\n    4288193352: \"IFCACTUATOR\",\r\n    2874132201: \"IFCACTUATORTYPE\",\r\n    618182010: \"IFCADDRESS\",\r\n    1635779807: \"IFCADVANCEDBREP\",\r\n    2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\r\n    3406155212: \"IFCADVANCEDFACE\",\r\n    1634111441: \"IFCAIRTERMINAL\",\r\n    177149247: \"IFCAIRTERMINALBOX\",\r\n    1411407467: \"IFCAIRTERMINALBOXTYPE\",\r\n    3352864051: \"IFCAIRTERMINALTYPE\",\r\n    2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\r\n    1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\r\n    3087945054: \"IFCALARM\",\r\n    3001207471: \"IFCALARMTYPE\",\r\n    325726236: \"IFCALIGNMENT\",\r\n    749761778: \"IFCALIGNMENT2DHORIZONTAL\",\r\n    3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\r\n    2483840362: \"IFCALIGNMENT2DSEGMENT\",\r\n    3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\r\n    3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\r\n    4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\r\n    53199957: \"IFCALIGNMENT2DVERTICAL\",\r\n    2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\r\n    3512275521: \"IFCALIGNMENTCURVE\",\r\n    1674181508: \"IFCANNOTATION\",\r\n    669184980: \"IFCANNOTATIONFILLAREA\",\r\n    639542469: \"IFCAPPLICATION\",\r\n    411424972: \"IFCAPPLIEDVALUE\",\r\n    130549933: \"IFCAPPROVAL\",\r\n    3869604511: \"IFCAPPROVALRELATIONSHIP\",\r\n    3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\r\n    1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\r\n    2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\r\n    3460190687: \"IFCASSET\",\r\n    3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\r\n    277319702: \"IFCAUDIOVISUALAPPLIANCE\",\r\n    1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\r\n    4261334040: \"IFCAXIS1PLACEMENT\",\r\n    3125803723: \"IFCAXIS2PLACEMENT2D\",\r\n    2740243338: \"IFCAXIS2PLACEMENT3D\",\r\n    1967976161: \"IFCBSPLINECURVE\",\r\n    2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\r\n    2887950389: \"IFCBSPLINESURFACE\",\r\n    167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\r\n    753842376: \"IFCBEAM\",\r\n    2906023776: \"IFCBEAMSTANDARDCASE\",\r\n    819618141: \"IFCBEAMTYPE\",\r\n    4196446775: \"IFCBEARING\",\r\n    3649138523: \"IFCBEARINGTYPE\",\r\n    616511568: \"IFCBLOBTEXTURE\",\r\n    1334484129: \"IFCBLOCK\",\r\n    32344328: \"IFCBOILER\",\r\n    231477066: \"IFCBOILERTYPE\",\r\n    3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\r\n    2736907675: \"IFCBOOLEANRESULT\",\r\n    4037036970: \"IFCBOUNDARYCONDITION\",\r\n    1136057603: \"IFCBOUNDARYCURVE\",\r\n    1560379544: \"IFCBOUNDARYEDGECONDITION\",\r\n    3367102660: \"IFCBOUNDARYFACECONDITION\",\r\n    1387855156: \"IFCBOUNDARYNODECONDITION\",\r\n    2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\r\n    1260505505: \"IFCBOUNDEDCURVE\",\r\n    4182860854: \"IFCBOUNDEDSURFACE\",\r\n    2581212453: \"IFCBOUNDINGBOX\",\r\n    2713105998: \"IFCBOXEDHALFSPACE\",\r\n    644574406: \"IFCBRIDGE\",\r\n    963979645: \"IFCBRIDGEPART\",\r\n    4031249490: \"IFCBUILDING\",\r\n    3299480353: \"IFCBUILDINGELEMENT\",\r\n    2979338954: \"IFCBUILDINGELEMENTPART\",\r\n    39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\r\n    1095909175: \"IFCBUILDINGELEMENTPROXY\",\r\n    1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\r\n    1950629157: \"IFCBUILDINGELEMENTTYPE\",\r\n    3124254112: \"IFCBUILDINGSTOREY\",\r\n    1177604601: \"IFCBUILDINGSYSTEM\",\r\n    2938176219: \"IFCBURNER\",\r\n    2188180465: \"IFCBURNERTYPE\",\r\n    2898889636: \"IFCCSHAPEPROFILEDEF\",\r\n    635142910: \"IFCCABLECARRIERFITTING\",\r\n    395041908: \"IFCCABLECARRIERFITTINGTYPE\",\r\n    3758799889: \"IFCCABLECARRIERSEGMENT\",\r\n    3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\r\n    1051757585: \"IFCCABLEFITTING\",\r\n    2674252688: \"IFCCABLEFITTINGTYPE\",\r\n    4217484030: \"IFCCABLESEGMENT\",\r\n    1285652485: \"IFCCABLESEGMENTTYPE\",\r\n    3999819293: \"IFCCAISSONFOUNDATION\",\r\n    3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\r\n    1123145078: \"IFCCARTESIANPOINT\",\r\n    574549367: \"IFCCARTESIANPOINTLIST\",\r\n    1675464909: \"IFCCARTESIANPOINTLIST2D\",\r\n    2059837836: \"IFCCARTESIANPOINTLIST3D\",\r\n    59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\r\n    3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\r\n    3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\r\n    3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\r\n    1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\r\n    3150382593: \"IFCCENTERLINEPROFILEDEF\",\r\n    3902619387: \"IFCCHILLER\",\r\n    2951183804: \"IFCCHILLERTYPE\",\r\n    3296154744: \"IFCCHIMNEY\",\r\n    2197970202: \"IFCCHIMNEYTYPE\",\r\n    2611217952: \"IFCCIRCLE\",\r\n    2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\r\n    1383045692: \"IFCCIRCLEPROFILEDEF\",\r\n    1062206242: \"IFCCIRCULARARCSEGMENT2D\",\r\n    1677625105: \"IFCCIVILELEMENT\",\r\n    3893394355: \"IFCCIVILELEMENTTYPE\",\r\n    747523909: \"IFCCLASSIFICATION\",\r\n    647927063: \"IFCCLASSIFICATIONREFERENCE\",\r\n    2205249479: \"IFCCLOSEDSHELL\",\r\n    639361253: \"IFCCOIL\",\r\n    2301859152: \"IFCCOILTYPE\",\r\n    776857604: \"IFCCOLOURRGB\",\r\n    3285139300: \"IFCCOLOURRGBLIST\",\r\n    3264961684: \"IFCCOLOURSPECIFICATION\",\r\n    843113511: \"IFCCOLUMN\",\r\n    905975707: \"IFCCOLUMNSTANDARDCASE\",\r\n    300633059: \"IFCCOLUMNTYPE\",\r\n    3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\r\n    400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\r\n    2542286263: \"IFCCOMPLEXPROPERTY\",\r\n    3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\r\n    3732776249: \"IFCCOMPOSITECURVE\",\r\n    15328376: \"IFCCOMPOSITECURVEONSURFACE\",\r\n    2485617015: \"IFCCOMPOSITECURVESEGMENT\",\r\n    1485152156: \"IFCCOMPOSITEPROFILEDEF\",\r\n    3571504051: \"IFCCOMPRESSOR\",\r\n    3850581409: \"IFCCOMPRESSORTYPE\",\r\n    2272882330: \"IFCCONDENSER\",\r\n    2816379211: \"IFCCONDENSERTYPE\",\r\n    2510884976: \"IFCCONIC\",\r\n    370225590: \"IFCCONNECTEDFACESET\",\r\n    1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\r\n    2859738748: \"IFCCONNECTIONGEOMETRY\",\r\n    45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\r\n    2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\r\n    2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\r\n    775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\r\n    1959218052: \"IFCCONSTRAINT\",\r\n    3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\r\n    2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\r\n    1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\r\n    4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\r\n    488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\r\n    1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\r\n    2559216714: \"IFCCONSTRUCTIONRESOURCE\",\r\n    2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\r\n    3419103109: \"IFCCONTEXT\",\r\n    3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\r\n    3293443760: \"IFCCONTROL\",\r\n    25142252: \"IFCCONTROLLER\",\r\n    578613899: \"IFCCONTROLLERTYPE\",\r\n    2889183280: \"IFCCONVERSIONBASEDUNIT\",\r\n    2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\r\n    4136498852: \"IFCCOOLEDBEAM\",\r\n    335055490: \"IFCCOOLEDBEAMTYPE\",\r\n    3640358203: \"IFCCOOLINGTOWER\",\r\n    2954562838: \"IFCCOOLINGTOWERTYPE\",\r\n    1785450214: \"IFCCOORDINATEOPERATION\",\r\n    1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\r\n    3895139033: \"IFCCOSTITEM\",\r\n    1419761937: \"IFCCOSTSCHEDULE\",\r\n    602808272: \"IFCCOSTVALUE\",\r\n    1973544240: \"IFCCOVERING\",\r\n    1916426348: \"IFCCOVERINGTYPE\",\r\n    3295246426: \"IFCCREWRESOURCE\",\r\n    1815067380: \"IFCCREWRESOURCETYPE\",\r\n    2506170314: \"IFCCSGPRIMITIVE3D\",\r\n    2147822146: \"IFCCSGSOLID\",\r\n    539742890: \"IFCCURRENCYRELATIONSHIP\",\r\n    3495092785: \"IFCCURTAINWALL\",\r\n    1457835157: \"IFCCURTAINWALLTYPE\",\r\n    2601014836: \"IFCCURVE\",\r\n    2827736869: \"IFCCURVEBOUNDEDPLANE\",\r\n    2629017746: \"IFCCURVEBOUNDEDSURFACE\",\r\n    1186437898: \"IFCCURVESEGMENT2D\",\r\n    3800577675: \"IFCCURVESTYLE\",\r\n    1105321065: \"IFCCURVESTYLEFONT\",\r\n    2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\r\n    3510044353: \"IFCCURVESTYLEFONTPATTERN\",\r\n    1213902940: \"IFCCYLINDRICALSURFACE\",\r\n    4074379575: \"IFCDAMPER\",\r\n    3961806047: \"IFCDAMPERTYPE\",\r\n    3426335179: \"IFCDEEPFOUNDATION\",\r\n    1306400036: \"IFCDEEPFOUNDATIONTYPE\",\r\n    3632507154: \"IFCDERIVEDPROFILEDEF\",\r\n    1765591967: \"IFCDERIVEDUNIT\",\r\n    1045800335: \"IFCDERIVEDUNITELEMENT\",\r\n    2949456006: \"IFCDIMENSIONALEXPONENTS\",\r\n    32440307: \"IFCDIRECTION\",\r\n    1335981549: \"IFCDISCRETEACCESSORY\",\r\n    2635815018: \"IFCDISCRETEACCESSORYTYPE\",\r\n    1945343521: \"IFCDISTANCEEXPRESSION\",\r\n    1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\r\n    1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\r\n    562808652: \"IFCDISTRIBUTIONCIRCUIT\",\r\n    1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\r\n    2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\r\n    1945004755: \"IFCDISTRIBUTIONELEMENT\",\r\n    3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\r\n    3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\r\n    3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\r\n    3041715199: \"IFCDISTRIBUTIONPORT\",\r\n    3205830791: \"IFCDISTRIBUTIONSYSTEM\",\r\n    1154170062: \"IFCDOCUMENTINFORMATION\",\r\n    770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\r\n    3732053477: \"IFCDOCUMENTREFERENCE\",\r\n    395920057: \"IFCDOOR\",\r\n    2963535650: \"IFCDOORLININGPROPERTIES\",\r\n    1714330368: \"IFCDOORPANELPROPERTIES\",\r\n    3242481149: \"IFCDOORSTANDARDCASE\",\r\n    526551008: \"IFCDOORSTYLE\",\r\n    2323601079: \"IFCDOORTYPE\",\r\n    445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\r\n    4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\r\n    342316401: \"IFCDUCTFITTING\",\r\n    869906466: \"IFCDUCTFITTINGTYPE\",\r\n    3518393246: \"IFCDUCTSEGMENT\",\r\n    3760055223: \"IFCDUCTSEGMENTTYPE\",\r\n    1360408905: \"IFCDUCTSILENCER\",\r\n    2030761528: \"IFCDUCTSILENCERTYPE\",\r\n    3900360178: \"IFCEDGE\",\r\n    476780140: \"IFCEDGECURVE\",\r\n    1472233963: \"IFCEDGELOOP\",\r\n    1904799276: \"IFCELECTRICAPPLIANCE\",\r\n    663422040: \"IFCELECTRICAPPLIANCETYPE\",\r\n    862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\r\n    2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\r\n    3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\r\n    3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\r\n    264262732: \"IFCELECTRICGENERATOR\",\r\n    1534661035: \"IFCELECTRICGENERATORTYPE\",\r\n    402227799: \"IFCELECTRICMOTOR\",\r\n    1217240411: \"IFCELECTRICMOTORTYPE\",\r\n    1003880860: \"IFCELECTRICTIMECONTROL\",\r\n    712377611: \"IFCELECTRICTIMECONTROLTYPE\",\r\n    1758889154: \"IFCELEMENT\",\r\n    4123344466: \"IFCELEMENTASSEMBLY\",\r\n    2397081782: \"IFCELEMENTASSEMBLYTYPE\",\r\n    1623761950: \"IFCELEMENTCOMPONENT\",\r\n    2590856083: \"IFCELEMENTCOMPONENTTYPE\",\r\n    1883228015: \"IFCELEMENTQUANTITY\",\r\n    339256511: \"IFCELEMENTTYPE\",\r\n    2777663545: \"IFCELEMENTARYSURFACE\",\r\n    1704287377: \"IFCELLIPSE\",\r\n    2835456948: \"IFCELLIPSEPROFILEDEF\",\r\n    1658829314: \"IFCENERGYCONVERSIONDEVICE\",\r\n    2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\r\n    2814081492: \"IFCENGINE\",\r\n    132023988: \"IFCENGINETYPE\",\r\n    3747195512: \"IFCEVAPORATIVECOOLER\",\r\n    3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\r\n    484807127: \"IFCEVAPORATOR\",\r\n    3390157468: \"IFCEVAPORATORTYPE\",\r\n    4148101412: \"IFCEVENT\",\r\n    211053100: \"IFCEVENTTIME\",\r\n    4024345920: \"IFCEVENTTYPE\",\r\n    297599258: \"IFCEXTENDEDPROPERTIES\",\r\n    4294318154: \"IFCEXTERNALINFORMATION\",\r\n    3200245327: \"IFCEXTERNALREFERENCE\",\r\n    1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\r\n    1209101575: \"IFCEXTERNALSPATIALELEMENT\",\r\n    2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\r\n    2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\r\n    1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\r\n    3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\r\n    477187591: \"IFCEXTRUDEDAREASOLID\",\r\n    2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\r\n    2556980723: \"IFCFACE\",\r\n    2047409740: \"IFCFACEBASEDSURFACEMODEL\",\r\n    1809719519: \"IFCFACEBOUND\",\r\n    803316827: \"IFCFACEOUTERBOUND\",\r\n    3008276851: \"IFCFACESURFACE\",\r\n    807026263: \"IFCFACETEDBREP\",\r\n    3737207727: \"IFCFACETEDBREPWITHVOIDS\",\r\n    24185140: \"IFCFACILITY\",\r\n    1310830890: \"IFCFACILITYPART\",\r\n    4219587988: \"IFCFAILURECONNECTIONCONDITION\",\r\n    3415622556: \"IFCFAN\",\r\n    346874300: \"IFCFANTYPE\",\r\n    647756555: \"IFCFASTENER\",\r\n    2489546625: \"IFCFASTENERTYPE\",\r\n    2827207264: \"IFCFEATUREELEMENT\",\r\n    2143335405: \"IFCFEATUREELEMENTADDITION\",\r\n    1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\r\n    738692330: \"IFCFILLAREASTYLE\",\r\n    374418227: \"IFCFILLAREASTYLEHATCHING\",\r\n    315944413: \"IFCFILLAREASTYLETILES\",\r\n    819412036: \"IFCFILTER\",\r\n    1810631287: \"IFCFILTERTYPE\",\r\n    1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\r\n    4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\r\n    2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\r\n    2058353004: \"IFCFLOWCONTROLLER\",\r\n    3907093117: \"IFCFLOWCONTROLLERTYPE\",\r\n    4278956645: \"IFCFLOWFITTING\",\r\n    3198132628: \"IFCFLOWFITTINGTYPE\",\r\n    182646315: \"IFCFLOWINSTRUMENT\",\r\n    4037862832: \"IFCFLOWINSTRUMENTTYPE\",\r\n    2188021234: \"IFCFLOWMETER\",\r\n    3815607619: \"IFCFLOWMETERTYPE\",\r\n    3132237377: \"IFCFLOWMOVINGDEVICE\",\r\n    1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\r\n    987401354: \"IFCFLOWSEGMENT\",\r\n    1834744321: \"IFCFLOWSEGMENTTYPE\",\r\n    707683696: \"IFCFLOWSTORAGEDEVICE\",\r\n    1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\r\n    2223149337: \"IFCFLOWTERMINAL\",\r\n    2297155007: \"IFCFLOWTERMINALTYPE\",\r\n    3508470533: \"IFCFLOWTREATMENTDEVICE\",\r\n    3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\r\n    900683007: \"IFCFOOTING\",\r\n    1893162501: \"IFCFOOTINGTYPE\",\r\n    263784265: \"IFCFURNISHINGELEMENT\",\r\n    4238390223: \"IFCFURNISHINGELEMENTTYPE\",\r\n    1509553395: \"IFCFURNITURE\",\r\n    1268542332: \"IFCFURNITURETYPE\",\r\n    3493046030: \"IFCGEOGRAPHICELEMENT\",\r\n    4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\r\n    987898635: \"IFCGEOMETRICCURVESET\",\r\n    3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\r\n    2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\r\n    4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\r\n    3590301190: \"IFCGEOMETRICSET\",\r\n    3009204131: \"IFCGRID\",\r\n    852622518: \"IFCGRIDAXIS\",\r\n    178086475: \"IFCGRIDPLACEMENT\",\r\n    2706460486: \"IFCGROUP\",\r\n    812098782: \"IFCHALFSPACESOLID\",\r\n    3319311131: \"IFCHEATEXCHANGER\",\r\n    1251058090: \"IFCHEATEXCHANGERTYPE\",\r\n    2068733104: \"IFCHUMIDIFIER\",\r\n    1806887404: \"IFCHUMIDIFIERTYPE\",\r\n    1484403080: \"IFCISHAPEPROFILEDEF\",\r\n    3905492369: \"IFCIMAGETEXTURE\",\r\n    3570813810: \"IFCINDEXEDCOLOURMAP\",\r\n    2571569899: \"IFCINDEXEDPOLYCURVE\",\r\n    178912537: \"IFCINDEXEDPOLYGONALFACE\",\r\n    2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\r\n    1437953363: \"IFCINDEXEDTEXTUREMAP\",\r\n    2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\r\n    4175244083: \"IFCINTERCEPTOR\",\r\n    3946677679: \"IFCINTERCEPTORTYPE\",\r\n    3113134337: \"IFCINTERSECTIONCURVE\",\r\n    2391368822: \"IFCINVENTORY\",\r\n    3741457305: \"IFCIRREGULARTIMESERIES\",\r\n    3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\r\n    2176052936: \"IFCJUNCTIONBOX\",\r\n    4288270099: \"IFCJUNCTIONBOXTYPE\",\r\n    572779678: \"IFCLSHAPEPROFILEDEF\",\r\n    3827777499: \"IFCLABORRESOURCE\",\r\n    428585644: \"IFCLABORRESOURCETYPE\",\r\n    1585845231: \"IFCLAGTIME\",\r\n    76236018: \"IFCLAMP\",\r\n    1051575348: \"IFCLAMPTYPE\",\r\n    2655187982: \"IFCLIBRARYINFORMATION\",\r\n    3452421091: \"IFCLIBRARYREFERENCE\",\r\n    4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\r\n    629592764: \"IFCLIGHTFIXTURE\",\r\n    1161773419: \"IFCLIGHTFIXTURETYPE\",\r\n    1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\r\n    1402838566: \"IFCLIGHTSOURCE\",\r\n    125510826: \"IFCLIGHTSOURCEAMBIENT\",\r\n    2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\r\n    4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\r\n    1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\r\n    3422422726: \"IFCLIGHTSOURCESPOT\",\r\n    1281925730: \"IFCLINE\",\r\n    3092502836: \"IFCLINESEGMENT2D\",\r\n    388784114: \"IFCLINEARPLACEMENT\",\r\n    1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\r\n    2624227202: \"IFCLOCALPLACEMENT\",\r\n    1008929658: \"IFCLOOP\",\r\n    1425443689: \"IFCMANIFOLDSOLIDBREP\",\r\n    3057273783: \"IFCMAPCONVERSION\",\r\n    2347385850: \"IFCMAPPEDITEM\",\r\n    1838606355: \"IFCMATERIAL\",\r\n    1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\r\n    3708119000: \"IFCMATERIALCONSTITUENT\",\r\n    2852063980: \"IFCMATERIALCONSTITUENTSET\",\r\n    760658860: \"IFCMATERIALDEFINITION\",\r\n    2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\r\n    248100487: \"IFCMATERIALLAYER\",\r\n    3303938423: \"IFCMATERIALLAYERSET\",\r\n    1303795690: \"IFCMATERIALLAYERSETUSAGE\",\r\n    1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\r\n    2199411900: \"IFCMATERIALLIST\",\r\n    2235152071: \"IFCMATERIALPROFILE\",\r\n    164193824: \"IFCMATERIALPROFILESET\",\r\n    3079605661: \"IFCMATERIALPROFILESETUSAGE\",\r\n    3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\r\n    552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\r\n    3265635763: \"IFCMATERIALPROPERTIES\",\r\n    853536259: \"IFCMATERIALRELATIONSHIP\",\r\n    1507914824: \"IFCMATERIALUSAGEDEFINITION\",\r\n    2597039031: \"IFCMEASUREWITHUNIT\",\r\n    377706215: \"IFCMECHANICALFASTENER\",\r\n    2108223431: \"IFCMECHANICALFASTENERTYPE\",\r\n    1437502449: \"IFCMEDICALDEVICE\",\r\n    1114901282: \"IFCMEDICALDEVICETYPE\",\r\n    1073191201: \"IFCMEMBER\",\r\n    1911478936: \"IFCMEMBERSTANDARDCASE\",\r\n    3181161470: \"IFCMEMBERTYPE\",\r\n    3368373690: \"IFCMETRIC\",\r\n    2998442950: \"IFCMIRROREDPROFILEDEF\",\r\n    2706619895: \"IFCMONETARYUNIT\",\r\n    2474470126: \"IFCMOTORCONNECTION\",\r\n    977012517: \"IFCMOTORCONNECTIONTYPE\",\r\n    1918398963: \"IFCNAMEDUNIT\",\r\n    3888040117: \"IFCOBJECT\",\r\n    219451334: \"IFCOBJECTDEFINITION\",\r\n    3701648758: \"IFCOBJECTPLACEMENT\",\r\n    2251480897: \"IFCOBJECTIVE\",\r\n    4143007308: \"IFCOCCUPANT\",\r\n    590820931: \"IFCOFFSETCURVE\",\r\n    3388369263: \"IFCOFFSETCURVE2D\",\r\n    3505215534: \"IFCOFFSETCURVE3D\",\r\n    2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\r\n    2665983363: \"IFCOPENSHELL\",\r\n    3588315303: \"IFCOPENINGELEMENT\",\r\n    3079942009: \"IFCOPENINGSTANDARDCASE\",\r\n    4251960020: \"IFCORGANIZATION\",\r\n    1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\r\n    643959842: \"IFCORIENTATIONEXPRESSION\",\r\n    1029017970: \"IFCORIENTEDEDGE\",\r\n    144952367: \"IFCOUTERBOUNDARYCURVE\",\r\n    3694346114: \"IFCOUTLET\",\r\n    2837617999: \"IFCOUTLETTYPE\",\r\n    1207048766: \"IFCOWNERHISTORY\",\r\n    2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\r\n    2519244187: \"IFCPATH\",\r\n    1682466193: \"IFCPCURVE\",\r\n    2382730787: \"IFCPERFORMANCEHISTORY\",\r\n    3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\r\n    3327091369: \"IFCPERMIT\",\r\n    2077209135: \"IFCPERSON\",\r\n    101040310: \"IFCPERSONANDORGANIZATION\",\r\n    3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\r\n    2483315170: \"IFCPHYSICALQUANTITY\",\r\n    2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\r\n    1687234759: \"IFCPILE\",\r\n    1158309216: \"IFCPILETYPE\",\r\n    310824031: \"IFCPIPEFITTING\",\r\n    804291784: \"IFCPIPEFITTINGTYPE\",\r\n    3612865200: \"IFCPIPESEGMENT\",\r\n    4231323485: \"IFCPIPESEGMENTTYPE\",\r\n    597895409: \"IFCPIXELTEXTURE\",\r\n    2004835150: \"IFCPLACEMENT\",\r\n    603570806: \"IFCPLANARBOX\",\r\n    1663979128: \"IFCPLANAREXTENT\",\r\n    220341763: \"IFCPLANE\",\r\n    3171933400: \"IFCPLATE\",\r\n    1156407060: \"IFCPLATESTANDARDCASE\",\r\n    4017108033: \"IFCPLATETYPE\",\r\n    2067069095: \"IFCPOINT\",\r\n    4022376103: \"IFCPOINTONCURVE\",\r\n    1423911732: \"IFCPOINTONSURFACE\",\r\n    2924175390: \"IFCPOLYLOOP\",\r\n    2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\r\n    2839578677: \"IFCPOLYGONALFACESET\",\r\n    3724593414: \"IFCPOLYLINE\",\r\n    3740093272: \"IFCPORT\",\r\n    1946335990: \"IFCPOSITIONINGELEMENT\",\r\n    3355820592: \"IFCPOSTALADDRESS\",\r\n    759155922: \"IFCPREDEFINEDCOLOUR\",\r\n    2559016684: \"IFCPREDEFINEDCURVEFONT\",\r\n    3727388367: \"IFCPREDEFINEDITEM\",\r\n    3778827333: \"IFCPREDEFINEDPROPERTIES\",\r\n    3967405729: \"IFCPREDEFINEDPROPERTYSET\",\r\n    1775413392: \"IFCPREDEFINEDTEXTFONT\",\r\n    677532197: \"IFCPRESENTATIONITEM\",\r\n    2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\r\n    1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\r\n    3119450353: \"IFCPRESENTATIONSTYLE\",\r\n    2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\r\n    2744685151: \"IFCPROCEDURE\",\r\n    569719735: \"IFCPROCEDURETYPE\",\r\n    2945172077: \"IFCPROCESS\",\r\n    4208778838: \"IFCPRODUCT\",\r\n    673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\r\n    2095639259: \"IFCPRODUCTREPRESENTATION\",\r\n    3958567839: \"IFCPROFILEDEF\",\r\n    2802850158: \"IFCPROFILEPROPERTIES\",\r\n    103090709: \"IFCPROJECT\",\r\n    653396225: \"IFCPROJECTLIBRARY\",\r\n    2904328755: \"IFCPROJECTORDER\",\r\n    3843373140: \"IFCPROJECTEDCRS\",\r\n    3651124850: \"IFCPROJECTIONELEMENT\",\r\n    2598011224: \"IFCPROPERTY\",\r\n    986844984: \"IFCPROPERTYABSTRACTION\",\r\n    871118103: \"IFCPROPERTYBOUNDEDVALUE\",\r\n    1680319473: \"IFCPROPERTYDEFINITION\",\r\n    148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\r\n    4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\r\n    3710013099: \"IFCPROPERTYENUMERATION\",\r\n    2752243245: \"IFCPROPERTYLISTVALUE\",\r\n    941946838: \"IFCPROPERTYREFERENCEVALUE\",\r\n    1451395588: \"IFCPROPERTYSET\",\r\n    3357820518: \"IFCPROPERTYSETDEFINITION\",\r\n    492091185: \"IFCPROPERTYSETTEMPLATE\",\r\n    3650150729: \"IFCPROPERTYSINGLEVALUE\",\r\n    110355661: \"IFCPROPERTYTABLEVALUE\",\r\n    3521284610: \"IFCPROPERTYTEMPLATE\",\r\n    1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\r\n    738039164: \"IFCPROTECTIVEDEVICE\",\r\n    2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\r\n    655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\r\n    1842657554: \"IFCPROTECTIVEDEVICETYPE\",\r\n    3219374653: \"IFCPROXY\",\r\n    90941305: \"IFCPUMP\",\r\n    2250791053: \"IFCPUMPTYPE\",\r\n    2044713172: \"IFCQUANTITYAREA\",\r\n    2093928680: \"IFCQUANTITYCOUNT\",\r\n    931644368: \"IFCQUANTITYLENGTH\",\r\n    2090586900: \"IFCQUANTITYSET\",\r\n    3252649465: \"IFCQUANTITYTIME\",\r\n    2405470396: \"IFCQUANTITYVOLUME\",\r\n    825690147: \"IFCQUANTITYWEIGHT\",\r\n    2262370178: \"IFCRAILING\",\r\n    2893384427: \"IFCRAILINGTYPE\",\r\n    3024970846: \"IFCRAMP\",\r\n    3283111854: \"IFCRAMPFLIGHT\",\r\n    2324767716: \"IFCRAMPFLIGHTTYPE\",\r\n    1469900589: \"IFCRAMPTYPE\",\r\n    1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\r\n    683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\r\n    2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\r\n    3615266464: \"IFCRECTANGLEPROFILEDEF\",\r\n    2798486643: \"IFCRECTANGULARPYRAMID\",\r\n    3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\r\n    3915482550: \"IFCRECURRENCEPATTERN\",\r\n    2433181523: \"IFCREFERENCE\",\r\n    4021432810: \"IFCREFERENT\",\r\n    3413951693: \"IFCREGULARTIMESERIES\",\r\n    1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\r\n    3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\r\n    979691226: \"IFCREINFORCINGBAR\",\r\n    2572171363: \"IFCREINFORCINGBARTYPE\",\r\n    3027567501: \"IFCREINFORCINGELEMENT\",\r\n    964333572: \"IFCREINFORCINGELEMENTTYPE\",\r\n    2320036040: \"IFCREINFORCINGMESH\",\r\n    2310774935: \"IFCREINFORCINGMESHTYPE\",\r\n    160246688: \"IFCRELAGGREGATES\",\r\n    3939117080: \"IFCRELASSIGNS\",\r\n    1683148259: \"IFCRELASSIGNSTOACTOR\",\r\n    2495723537: \"IFCRELASSIGNSTOCONTROL\",\r\n    1307041759: \"IFCRELASSIGNSTOGROUP\",\r\n    1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\r\n    4278684876: \"IFCRELASSIGNSTOPROCESS\",\r\n    2857406711: \"IFCRELASSIGNSTOPRODUCT\",\r\n    205026976: \"IFCRELASSIGNSTORESOURCE\",\r\n    1865459582: \"IFCRELASSOCIATES\",\r\n    4095574036: \"IFCRELASSOCIATESAPPROVAL\",\r\n    919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\r\n    2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\r\n    982818633: \"IFCRELASSOCIATESDOCUMENT\",\r\n    3840914261: \"IFCRELASSOCIATESLIBRARY\",\r\n    2655215786: \"IFCRELASSOCIATESMATERIAL\",\r\n    826625072: \"IFCRELCONNECTS\",\r\n    1204542856: \"IFCRELCONNECTSELEMENTS\",\r\n    3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\r\n    4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\r\n    3190031847: \"IFCRELCONNECTSPORTS\",\r\n    2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\r\n    1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\r\n    504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\r\n    3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\r\n    3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\r\n    886880790: \"IFCRELCOVERSBLDGELEMENTS\",\r\n    2802773753: \"IFCRELCOVERSSPACES\",\r\n    2565941209: \"IFCRELDECLARES\",\r\n    2551354335: \"IFCRELDECOMPOSES\",\r\n    693640335: \"IFCRELDEFINES\",\r\n    1462361463: \"IFCRELDEFINESBYOBJECT\",\r\n    4186316022: \"IFCRELDEFINESBYPROPERTIES\",\r\n    307848117: \"IFCRELDEFINESBYTEMPLATE\",\r\n    781010003: \"IFCRELDEFINESBYTYPE\",\r\n    3940055652: \"IFCRELFILLSELEMENT\",\r\n    279856033: \"IFCRELFLOWCONTROLELEMENTS\",\r\n    427948657: \"IFCRELINTERFERESELEMENTS\",\r\n    3268803585: \"IFCRELNESTS\",\r\n    1441486842: \"IFCRELPOSITIONS\",\r\n    750771296: \"IFCRELPROJECTSELEMENT\",\r\n    1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\r\n    4122056220: \"IFCRELSEQUENCE\",\r\n    366585022: \"IFCRELSERVICESBUILDINGS\",\r\n    3451746338: \"IFCRELSPACEBOUNDARY\",\r\n    3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\r\n    1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\r\n    1401173127: \"IFCRELVOIDSELEMENT\",\r\n    478536968: \"IFCRELATIONSHIP\",\r\n    816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\r\n    1076942058: \"IFCREPRESENTATION\",\r\n    3377609919: \"IFCREPRESENTATIONCONTEXT\",\r\n    3008791417: \"IFCREPRESENTATIONITEM\",\r\n    1660063152: \"IFCREPRESENTATIONMAP\",\r\n    2914609552: \"IFCRESOURCE\",\r\n    2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\r\n    1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\r\n    2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\r\n    1042787934: \"IFCRESOURCETIME\",\r\n    1856042241: \"IFCREVOLVEDAREASOLID\",\r\n    3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\r\n    4158566097: \"IFCRIGHTCIRCULARCONE\",\r\n    3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\r\n    2016517767: \"IFCROOF\",\r\n    2781568857: \"IFCROOFTYPE\",\r\n    2341007311: \"IFCROOT\",\r\n    2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\r\n    448429030: \"IFCSIUNIT\",\r\n    3053780830: \"IFCSANITARYTERMINAL\",\r\n    1768891740: \"IFCSANITARYTERMINALTYPE\",\r\n    1054537805: \"IFCSCHEDULINGTIME\",\r\n    2157484638: \"IFCSEAMCURVE\",\r\n    2042790032: \"IFCSECTIONPROPERTIES\",\r\n    4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\r\n    1862484736: \"IFCSECTIONEDSOLID\",\r\n    1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\r\n    1509187699: \"IFCSECTIONEDSPINE\",\r\n    4086658281: \"IFCSENSOR\",\r\n    1783015770: \"IFCSENSORTYPE\",\r\n    1329646415: \"IFCSHADINGDEVICE\",\r\n    4074543187: \"IFCSHADINGDEVICETYPE\",\r\n    867548509: \"IFCSHAPEASPECT\",\r\n    3982875396: \"IFCSHAPEMODEL\",\r\n    4240577450: \"IFCSHAPEREPRESENTATION\",\r\n    4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\r\n    3692461612: \"IFCSIMPLEPROPERTY\",\r\n    3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\r\n    4097777520: \"IFCSITE\",\r\n    1529196076: \"IFCSLAB\",\r\n    3127900445: \"IFCSLABELEMENTEDCASE\",\r\n    3027962421: \"IFCSLABSTANDARDCASE\",\r\n    2533589738: \"IFCSLABTYPE\",\r\n    2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\r\n    3420628829: \"IFCSOLARDEVICE\",\r\n    1072016465: \"IFCSOLARDEVICETYPE\",\r\n    723233188: \"IFCSOLIDMODEL\",\r\n    3856911033: \"IFCSPACE\",\r\n    1999602285: \"IFCSPACEHEATER\",\r\n    1305183839: \"IFCSPACEHEATERTYPE\",\r\n    3812236995: \"IFCSPACETYPE\",\r\n    1412071761: \"IFCSPATIALELEMENT\",\r\n    710998568: \"IFCSPATIALELEMENTTYPE\",\r\n    2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\r\n    3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\r\n    463610769: \"IFCSPATIALZONE\",\r\n    2481509218: \"IFCSPATIALZONETYPE\",\r\n    451544542: \"IFCSPHERE\",\r\n    4015995234: \"IFCSPHERICALSURFACE\",\r\n    1404847402: \"IFCSTACKTERMINAL\",\r\n    3112655638: \"IFCSTACKTERMINALTYPE\",\r\n    331165859: \"IFCSTAIR\",\r\n    4252922144: \"IFCSTAIRFLIGHT\",\r\n    1039846685: \"IFCSTAIRFLIGHTTYPE\",\r\n    338393293: \"IFCSTAIRTYPE\",\r\n    682877961: \"IFCSTRUCTURALACTION\",\r\n    3544373492: \"IFCSTRUCTURALACTIVITY\",\r\n    2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\r\n    1179482911: \"IFCSTRUCTURALCONNECTION\",\r\n    2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\r\n    1004757350: \"IFCSTRUCTURALCURVEACTION\",\r\n    4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\r\n    214636428: \"IFCSTRUCTURALCURVEMEMBER\",\r\n    2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\r\n    2757150158: \"IFCSTRUCTURALCURVEREACTION\",\r\n    3136571912: \"IFCSTRUCTURALITEM\",\r\n    1807405624: \"IFCSTRUCTURALLINEARACTION\",\r\n    2162789131: \"IFCSTRUCTURALLOAD\",\r\n    385403989: \"IFCSTRUCTURALLOADCASE\",\r\n    3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\r\n    1252848954: \"IFCSTRUCTURALLOADGROUP\",\r\n    1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\r\n    609421318: \"IFCSTRUCTURALLOADORRESULT\",\r\n    2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\r\n    2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\r\n    1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\r\n    1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\r\n    1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\r\n    2525727697: \"IFCSTRUCTURALLOADSTATIC\",\r\n    3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\r\n    530289379: \"IFCSTRUCTURALMEMBER\",\r\n    1621171031: \"IFCSTRUCTURALPLANARACTION\",\r\n    2082059205: \"IFCSTRUCTURALPOINTACTION\",\r\n    734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\r\n    1235345126: \"IFCSTRUCTURALPOINTREACTION\",\r\n    3689010777: \"IFCSTRUCTURALREACTION\",\r\n    2986769608: \"IFCSTRUCTURALRESULTGROUP\",\r\n    3657597509: \"IFCSTRUCTURALSURFACEACTION\",\r\n    1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\r\n    3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\r\n    2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\r\n    603775116: \"IFCSTRUCTURALSURFACEREACTION\",\r\n    2830218821: \"IFCSTYLEMODEL\",\r\n    3958052878: \"IFCSTYLEDITEM\",\r\n    3049322572: \"IFCSTYLEDREPRESENTATION\",\r\n    148013059: \"IFCSUBCONTRACTRESOURCE\",\r\n    4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\r\n    2233826070: \"IFCSUBEDGE\",\r\n    2513912981: \"IFCSURFACE\",\r\n    699246055: \"IFCSURFACECURVE\",\r\n    2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\r\n    3101698114: \"IFCSURFACEFEATURE\",\r\n    2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\r\n    4124788165: \"IFCSURFACEOFREVOLUTION\",\r\n    2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\r\n    1300840506: \"IFCSURFACESTYLE\",\r\n    3303107099: \"IFCSURFACESTYLELIGHTING\",\r\n    1607154358: \"IFCSURFACESTYLEREFRACTION\",\r\n    1878645084: \"IFCSURFACESTYLERENDERING\",\r\n    846575682: \"IFCSURFACESTYLESHADING\",\r\n    1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\r\n    626085974: \"IFCSURFACETEXTURE\",\r\n    2247615214: \"IFCSWEPTAREASOLID\",\r\n    1260650574: \"IFCSWEPTDISKSOLID\",\r\n    1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\r\n    230924584: \"IFCSWEPTSURFACE\",\r\n    1162798199: \"IFCSWITCHINGDEVICE\",\r\n    2315554128: \"IFCSWITCHINGDEVICETYPE\",\r\n    2254336722: \"IFCSYSTEM\",\r\n    413509423: \"IFCSYSTEMFURNITUREELEMENT\",\r\n    1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\r\n    3071757647: \"IFCTSHAPEPROFILEDEF\",\r\n    985171141: \"IFCTABLE\",\r\n    2043862942: \"IFCTABLECOLUMN\",\r\n    531007025: \"IFCTABLEROW\",\r\n    812556717: \"IFCTANK\",\r\n    5716631: \"IFCTANKTYPE\",\r\n    3473067441: \"IFCTASK\",\r\n    1549132990: \"IFCTASKTIME\",\r\n    2771591690: \"IFCTASKTIMERECURRING\",\r\n    3206491090: \"IFCTASKTYPE\",\r\n    912023232: \"IFCTELECOMADDRESS\",\r\n    3824725483: \"IFCTENDON\",\r\n    2347447852: \"IFCTENDONANCHOR\",\r\n    3081323446: \"IFCTENDONANCHORTYPE\",\r\n    3663046924: \"IFCTENDONCONDUIT\",\r\n    2281632017: \"IFCTENDONCONDUITTYPE\",\r\n    2415094496: \"IFCTENDONTYPE\",\r\n    2387106220: \"IFCTESSELLATEDFACESET\",\r\n    901063453: \"IFCTESSELLATEDITEM\",\r\n    4282788508: \"IFCTEXTLITERAL\",\r\n    3124975700: \"IFCTEXTLITERALWITHEXTENT\",\r\n    1447204868: \"IFCTEXTSTYLE\",\r\n    1983826977: \"IFCTEXTSTYLEFONTMODEL\",\r\n    2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\r\n    1640371178: \"IFCTEXTSTYLETEXTMODEL\",\r\n    280115917: \"IFCTEXTURECOORDINATE\",\r\n    1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\r\n    2552916305: \"IFCTEXTUREMAP\",\r\n    1210645708: \"IFCTEXTUREVERTEX\",\r\n    3611470254: \"IFCTEXTUREVERTEXLIST\",\r\n    1199560280: \"IFCTIMEPERIOD\",\r\n    3101149627: \"IFCTIMESERIES\",\r\n    581633288: \"IFCTIMESERIESVALUE\",\r\n    1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\r\n    1735638870: \"IFCTOPOLOGYREPRESENTATION\",\r\n    1935646853: \"IFCTOROIDALSURFACE\",\r\n    3825984169: \"IFCTRANSFORMER\",\r\n    1692211062: \"IFCTRANSFORMERTYPE\",\r\n    2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\r\n    1620046519: \"IFCTRANSPORTELEMENT\",\r\n    2097647324: \"IFCTRANSPORTELEMENTTYPE\",\r\n    2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\r\n    2916149573: \"IFCTRIANGULATEDFACESET\",\r\n    1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\r\n    3593883385: \"IFCTRIMMEDCURVE\",\r\n    3026737570: \"IFCTUBEBUNDLE\",\r\n    1600972822: \"IFCTUBEBUNDLETYPE\",\r\n    1628702193: \"IFCTYPEOBJECT\",\r\n    3736923433: \"IFCTYPEPROCESS\",\r\n    2347495698: \"IFCTYPEPRODUCT\",\r\n    3698973494: \"IFCTYPERESOURCE\",\r\n    427810014: \"IFCUSHAPEPROFILEDEF\",\r\n    180925521: \"IFCUNITASSIGNMENT\",\r\n    630975310: \"IFCUNITARYCONTROLELEMENT\",\r\n    3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\r\n    4292641817: \"IFCUNITARYEQUIPMENT\",\r\n    1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\r\n    4207607924: \"IFCVALVE\",\r\n    728799441: \"IFCVALVETYPE\",\r\n    1417489154: \"IFCVECTOR\",\r\n    2799835756: \"IFCVERTEX\",\r\n    2759199220: \"IFCVERTEXLOOP\",\r\n    1907098498: \"IFCVERTEXPOINT\",\r\n    1530820697: \"IFCVIBRATIONDAMPER\",\r\n    3956297820: \"IFCVIBRATIONDAMPERTYPE\",\r\n    2391383451: \"IFCVIBRATIONISOLATOR\",\r\n    3313531582: \"IFCVIBRATIONISOLATORTYPE\",\r\n    2769231204: \"IFCVIRTUALELEMENT\",\r\n    891718957: \"IFCVIRTUALGRIDINTERSECTION\",\r\n    926996030: \"IFCVOIDINGFEATURE\",\r\n    2391406946: \"IFCWALL\",\r\n    4156078855: \"IFCWALLELEMENTEDCASE\",\r\n    3512223829: \"IFCWALLSTANDARDCASE\",\r\n    1898987631: \"IFCWALLTYPE\",\r\n    4237592921: \"IFCWASTETERMINAL\",\r\n    1133259667: \"IFCWASTETERMINALTYPE\",\r\n    3304561284: \"IFCWINDOW\",\r\n    336235671: \"IFCWINDOWLININGPROPERTIES\",\r\n    512836454: \"IFCWINDOWPANELPROPERTIES\",\r\n    486154966: \"IFCWINDOWSTANDARDCASE\",\r\n    1299126871: \"IFCWINDOWSTYLE\",\r\n    4009809668: \"IFCWINDOWTYPE\",\r\n    4088093105: \"IFCWORKCALENDAR\",\r\n    1028945134: \"IFCWORKCONTROL\",\r\n    4218914973: \"IFCWORKPLAN\",\r\n    3342526732: \"IFCWORKSCHEDULE\",\r\n    1236880293: \"IFCWORKTIME\",\r\n    2543172580: \"IFCZSHAPEPROFILEDEF\",\r\n    1033361043: \"IFCZONE\",\r\n}","import { IfcTypesMap } from '../IfcTypesMap';\r\nimport { JSONObject, pName } from '../../BaseDefinitions';\r\nimport { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\n\r\nexport class JSONPropertyManager extends BasePropertyManager implements PropertyAPI {\r\n\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return { ...this.state.models[modelID].jsonData[id] };\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const projectsIDs = await this.getAllItemsOfType(modelID, IFCPROJECT, false);\r\n        const projectID = projectsIDs[0];\r\n        const project = JSONPropertyManager.newIfcProject(projectID);\r\n        this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return { ...project };\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const typeName = IfcTypesMap[type];\r\n        if (!typeName) {\r\n            throw new Error(`Type not found: ${type}`);\r\n        }\r\n        return this.filterItemsByType(data, typeName, verbose);\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const resultIDs = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result = this.getItemsByID(modelID, resultIDs);\r\n        if (recursive) {\r\n            result.forEach(result => this.getReferencesRecursively(modelID, result));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        return this.state.models[modelID].jsonData[id].type;\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        relation.forEach(rel => {\r\n            this.saveChunk(chunks, propNames, rel);\r\n        });\r\n    }\r\n\r\n    private filterItemsByType(data: { [id: number]: JSONObject }, typeName: string, verbose: boolean) {\r\n        const result: any[] = [];\r\n        Object.keys(data).forEach(key => {\r\n            const numKey = parseInt(key);\r\n            if (data[numKey].type.toUpperCase() === typeName) {\r\n                result.push(verbose ? { ...data[numKey] } : numKey);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        const IDs: number[] = [];\r\n        lines.forEach(line => {\r\n            const isRelated = JSONPropertyManager.isRelated(id, line, propNames);\r\n            if (isRelated) this.getRelated(line, propNames, IDs);\r\n        });\r\n        return IDs;\r\n    }\r\n\r\n    private getItemsByID(modelID: number, ids: number[]) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const result: any[] = [];\r\n        ids.forEach(id => result.push({ ...data[id] }));\r\n        return result;\r\n    }\r\n\r\n    private getReferencesRecursively(modelID: number, jsonObject: any) {\r\n        if (jsonObject == undefined) return;\r\n        const keys = Object.keys(jsonObject);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            this.getJSONItem(modelID, jsonObject, key);\r\n        }\r\n    }\r\n\r\n    private getJSONItem(modelID: number, jsonObject: any, key: string) {\r\n        if (Array.isArray(jsonObject[key])) {\r\n            return this.getMultipleJSONItems(modelID, jsonObject, key);\r\n        }\r\n        if (jsonObject[key] && jsonObject[key].type === 5) {\r\n            jsonObject[key] = this.getItemsByID(modelID, [jsonObject[key].value])[0];\r\n            this.getReferencesRecursively(modelID, jsonObject[key]);\r\n        }\r\n    }\r\n\r\n    private getMultipleJSONItems(modelID: number, jsonObject: any, key: string) {\r\n        jsonObject[key] = jsonObject[key].map((item: any) => {\r\n            if (item.type === 5) {\r\n                item = this.getItemsByID(modelID, [item.value])[0];\r\n                this.getReferencesRecursively(modelID, item);\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n}","import {\r\n    IdAttrName\r\n} from '../../BaseDefinitions';\r\nimport { IfcState } from '../../BaseDefinitions';\r\nimport { BufferGeometry } from 'three';\r\nimport { WebIfcPropertyManager } from './WebIfcPropertyManager';\r\nimport { JSONPropertyManager } from './JSONPropertyManager';\r\nimport { PropertyManagerAPI, PropertyAPI } from './BaseDefinitions';\r\nimport { IfcElements } from '../IFCElementsMap';\r\n\r\n/**\r\n * Contains the logic to get the properties of the items within an IFC model.\r\n */\r\nexport class PropertyManager implements PropertyManagerAPI {\r\n    private readonly webIfcProps: WebIfcPropertyManager;\r\n    private readonly jsonProps: JSONPropertyManager;\r\n    private currentProps: PropertyAPI;\r\n\r\n    constructor(private state: IfcState) {\r\n        this.webIfcProps = new WebIfcPropertyManager(state);\r\n        this.jsonProps = new JSONPropertyManager(state);\r\n        this.currentProps = this.webIfcProps;\r\n    }\r\n\r\n    async getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) throw new Error('Geometry does not have index information.');\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    async getItemProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getItemProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getPropertySets(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getTypeProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getMaterialsProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        this.updateCurrentProps();\r\n        if (!this.state.useJSON && includeProperties) {\r\n            console.warn('Including properties in getSpatialStructure with the JSON workflow disabled can lead to poor performance.');\r\n        }\r\n        return this.currentProps.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    private updateCurrentProps() {\r\n        this.currentProps = this.state.useJSON ? this.jsonProps : this.webIfcProps;\r\n    }\r\n\r\n}\r\n","import {\r\n    ErrorPropertiesNotAvailable, ErrorRootStateNotAvailable,\r\n    IfcEventData,\r\n    IfcWorkerAPI,\r\n    PropertyWorkerAPI,\r\n    WorkerAPIs\r\n} from '../BaseDefinitions';\r\nimport { PropertyManager } from '../../components/properties/PropertyManager';\r\n\r\nexport class PropertyWorker implements PropertyWorkerAPI {\r\n    properties?: PropertyManager;\r\n    API = WorkerAPIs.properties;\r\n\r\n    constructor(private worker: IfcWorkerAPI) {\r\n    }\r\n\r\n    initializeProperties() {\r\n        if (!this.properties) {\r\n            if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n            this.properties = new PropertyManager(this.worker.state);\r\n        }\r\n    }\r\n\r\n    async getAllItemsOfType(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getAllItemsOfType(args.modelID, args.type, args.verbose);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async getItemProperties(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getItemProperties(args.modelID, args.elementID, args.recurse);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async getMaterialsProperties(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getMaterialsProperties(args.modelID, args.elementID, args.recursive);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async getPropertySets(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getPropertySets(args.modelID, args.elementID, args.recursive);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async getSpatialStructure(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getSpatialStructure(args.modelID, args.includeProperties);\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async getTypeProperties(data: IfcEventData): Promise<void> {\r\n        this.initializeProperties();\r\n        if (!this.properties) throw new Error(ErrorPropertiesNotAvailable);\r\n        const args = data.args;\r\n        data.result = await this.properties.getTypeProperties(args.modelID, args.elementID, args.recursive);\r\n        this.worker.post(data);\r\n    }\r\n}","import {\r\n    ErrorBadJson,\r\n    ErrorBadJsonPath,\r\n    ErrorRootStateNotAvailable,\r\n    IfcEventData,\r\n    IfcWorkerAPI,\r\n    WorkerAPIs,\r\n    WorkerStateAPI\r\n} from '../BaseDefinitions';\r\n\r\nexport class StateWorker implements WorkerStateAPI {\r\n\r\n    API = WorkerAPIs.workerState;\r\n\r\n    constructor(private worker: IfcWorkerAPI) {\r\n    }\r\n\r\n    updateStateUseJson(data: IfcEventData): void {\r\n        if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n        this.worker.state.useJSON = data.args.useJson;\r\n        this.worker.post(data);\r\n    }\r\n\r\n    updateModelStateJsonData(data: IfcEventData): void {\r\n        if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n        const model = this.getModel(data);\r\n        model.jsonData = data.args.jsonData;\r\n        this.worker.post(data);\r\n    }\r\n\r\n    updateModelStateTypes(data: IfcEventData): void {\r\n        if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n        const model = this.getModel(data);\r\n        model.types = data.args.types;\r\n        this.worker.post(data);\r\n    }\r\n\r\n    async loadJsonDataFromWorker(data: IfcEventData): Promise<void> {\r\n        if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n        const currentModel = this.getModel(data);\r\n        const file = await fetch(data.args.path);\r\n        if(!file.ok) throw new Error(ErrorBadJsonPath);\r\n        const json = await file.json();\r\n        if(typeof json !== 'object') throw new Error(ErrorBadJson);\r\n        currentModel.jsonData = json;\r\n        this.worker.post(data);\r\n    }\r\n\r\n    private getModel(data: IfcEventData) {\r\n        if (!this.worker.state) throw new Error(ErrorRootStateNotAvailable);\r\n        const modelID = data.args.modelID;\r\n        if (!this.worker.state.models[modelID]) {\r\n            this.worker.state.models[modelID] = { modelID, mesh: {} as any, items: {}, types: {}, jsonData: {} };\r\n        }\r\n        return this.worker.state.models[modelID];\r\n    }\r\n}","import {\r\n    IfcEventData,\r\n    PropertyWorkerAPI,\r\n    RootWorker,\r\n    WebIfcWorkerAPI,\r\n    WorkerActions,\r\n    WorkerAPIs,\r\n    WorkerStateAPI\r\n} from './BaseDefinitions';\r\nimport { Serializer } from './serializer/Serializer';\r\nimport { WebIfcWorker } from './workers/WebIfcWorker';\r\nimport { IfcState, WebIfcAPI } from '../BaseDefinitions';\r\nimport { PropertyWorker } from './workers/PropertyWorker';\r\nimport { StateWorker } from './workers/StateWorker';\r\n\r\nclass IFCWorker implements RootWorker {\r\n    private readonly serializer = new Serializer();\r\n\r\n    workerState: WorkerStateAPI;\r\n    webIfc: WebIfcWorkerAPI;\r\n    properties: PropertyWorkerAPI;\r\n    state?: IfcState;\r\n\r\n    constructor() {\r\n        this.workerState = new StateWorker(this);\r\n        this.webIfc = new WebIfcWorker(this, this.serializer);\r\n        this.properties = new PropertyWorker(this);\r\n    }\r\n\r\n    initializeAPI(api: WebIfcAPI) {\r\n        this.state = {\r\n            models: [],\r\n            api,\r\n            useJSON: false,\r\n            worker: { active: false, path: '' }\r\n        };\r\n    }\r\n\r\n    post(data: any) {\r\n        // @ts-ignore\r\n        self.postMessage(data);\r\n    }\r\n\r\n    postCallback(data: any, result: any, serializer?: any) {\r\n        data.result = serializer ? serializer(result) : result;\r\n        this.post(data);\r\n    }\r\n}\r\n\r\nconst ifcWorker = new IFCWorker();\r\n\r\nself.onmessage = async (event: MessageEvent) => {\r\n    const data = event.data as IfcEventData;\r\n    const { worker, action } = data;\r\n    checkRequestIsValid(worker, action);\r\n    const requestedWorker = ifcWorker[worker] as any;\r\n    requestedWorker[action](data);\r\n};\r\n\r\nfunction checkRequestIsValid(worker: WorkerAPIs, action: WorkerActions) {\r\n    if (!ifcWorker[worker]) {\r\n        throw new Error(`The worker ${worker} does not exist.`);\r\n    }\r\n\r\n    const requestedWorker = ifcWorker[worker] as any;\r\n\r\n    if (!requestedWorker[action]) {\r\n        throw new Error(`The action ${action} does not exist in the worker ${worker}.`);\r\n    }\r\n}"],"names":[],"mappings":"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"}