import { WorkerActions, WorkerAPIs } from './BaseDefinitions';
import { PropertyHandler } from './handlers/PropertyHandler';
import { WebIfcHandler } from './handlers/WebIfcHandler';
import { IfcState } from '../BaseDefinitions';
import { WorkerStateHandler } from './handlers/WorkerStateHandler';
export declare class IFCWorkerHandler {
    state: IfcState;
    requestID: number;
    rejectHandlers: any;
    resolveHandlers: any;
    serializeHandlers: any;
    callbacks: {
        [id: number]: {
            action: any;
            serializer: any;
        };
    };
    readonly workerState: WorkerStateHandler;
    readonly webIfc: WebIfcHandler;
    readonly properties: PropertyHandler;
    private ifcWorker;
    private readonly serializer;
    private readonly workerPath;
    constructor(state: IfcState);
    request(worker: WorkerAPIs, action: WorkerActions, args?: any): Promise<any>;
    Close(): Promise<void>;
    private handleResponse;
    private resolveSerializations;
    private resolveCallbacks;
}
