import { IfcState } from '../BaseDefinitions';
import { BvhManager } from './BvhManager';
import { IFCModel } from "./IFCModel";
/**
 * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.
 */
export declare class IFCParser {
    private state;
    private BVH;
    loadedModels: number;
    private currentWebIfcID;
    private currentModelID;
    constructor(state: IfcState, BVH: BvhManager);
    parse(buffer: any): Promise<IFCModel>;
    getAndClearErrors(_modelId: number): void;
    private newIfcModel;
    private loadAllGeometry;
    private generateAllGeometriesByMaterial;
    private getGeometryAndMaterials;
    private saveAllPlacedGeometriesByMaterial;
    private savePlacedGeometry;
    private getBufferGeometry;
    private getVertices;
    private getIndices;
    private static getMeshMatrix;
    private static ifcGeomToBufferGeom;
    private static extractVertexData;
    private saveGeometryByMaterial;
    private static storeGeometryAttribute;
    private createMaterial;
}
